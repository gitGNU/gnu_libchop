#+TITLE: libchop, tools & library for data backup and distributed storage
#+STYLE: <link rel="stylesheet" type="text/css" href="libchop.css" />
#+OPTIONS: toc:nil num:nil author:nil timestamp:nil creator:nil
#+LANGUAGE: en

#+ATTR_HTML: alt="a chopper" class="logo"
[[./libchop-icon.png]]

Libchop is a set of utilities and library for data backup and
distributed storage.  Its main application is =chop-backup=, an
encrypted backup program with several salient features:

  - *Encrypted.* The backup data can safely be stored at an untrusted
    site without compromising its confidentiality.

  - *Tamper-proof.* The backup's integrity is checked upon recovery.

  - *Distributable.* Backup data can be written to more than one store.

  - *Shareable.* Each directory/file in a snapshot is identified by a
    "tuple", which is necessary and sufficient to retrieve it.  A tuple
    can be shared with others, which gives them access to the
    corresponding file/directory and _only_ it.

  - *Versioned.* The history of directory snapshots is recorded, at
    little cost.

  - *Compressed.* Similar data among files or versions are coalesced.
    For each file type an appropriate compression method is chosen.

  - *Evolutive.* The application is not bound to any storage, hash,
    encryption, or compression method.  In fact, all these parameters
    can vary from file to file within a snapshot.

[[./manual/libchop.html#Invoking-chop_002dbackup][Read more...]]

The library itself was initially designed as a building block for a
[[http://tel.archives-ouvertes.fr/tel-00196822/en/][peer-to-peer, cooperative backup system]].  In such a system, data has to
be sent by pieces, incrementally, and it may be scattered across several
participating nodes.  In addition, participating nodes may be untrusted,
which puts data confidentiality, integrity, and availability at risk.
[[./manual/libchop.html#Introduction][Read more...]]

Libchop was initially developed as part of a [[http://tel.archives-ouvertes.fr/tel-00196822/en/][PhD thesis]] in the [[http://www.laas.fr/mosaic/][MoSAIC
project]].

* Releases

Releases are available from [[http://download.savannah.gnu.org/releases/libchop/][your nearest Savannah mirror]] (or from
[[http://download.savannah.gnu.org/releases-noredirect/libchop/][Savannah itself]]).

* Documentation

  - The (incomplete) reference manual is part of the source distribution
    in GNU Texinfo form.  It can also be [[./manual/libchop.html][browsed on-line]].

  - The [[./doc/libchop-ghm-talk-2010.pdf][slides of a talk]] at the [[http://www.gnu.org/ghm/2010/denhaag/][2010 GNU Hackers Meeting in The Hague]].

  - [[http://hal.archives-ouvertes.fr/hal-00187069/en/][/Storage Tradeoffs in a Collaborative Backup Service for Mobile
    Devices/]] presents the motivation behind libchop along with
    experimental results comparing several storage strategies.

  - Chapter 4 of [[http://tel.archives-ouvertes.fr/tel-00196822/en/][/Cooperative Data Backup for Mobile Devices/]] provides
    additional details and results, for the insatiable.

  - A [[http://www.fdn.fr/~lcourtes/ludo-1.html#coop-bak][bibliography relative to cooperative backup and peer-to-peer storage]].

* Mailing List

A mailing list for bug reports and general discussion is available at
[[mailto:libchop-devel@nongnu.org][<libchop-devel@nongnu.org>]]. You can [[http://lists.nongnu.org/mailman/listinfo/libchop-devel][subscribe]] to the mailing list and
[[http://lists.gnu.org/pipermail/libchop-devel/][view the list archive]].

* Development

Development occurs using the Git distributed revision control system.  A
copy of the source code repository can be obtained using the following
command:

#+BEGIN_SRC sh
git clone git://git.sv.gnu.org/libchop.git
#+END_SRC

The repository can be [[http://git.savannah.gnu.org/cgit/libchop.git][browsed on-line]].

Additional information is available from the [[http://savannah.nongnu.org/projects/libchop][Savannah project page]]. 

Test coverage information is [[./coverage/][available here]].

* Related Work

  - [[http://plan9.bell-labs.com/magic/man2html/8/venti][Plan 9's Venti]] provides unencrypted content-addressable storage and
    archival.

  - [[http://tahoe-lafs.org/][Tahoe-LAFS]] is a distributed file system, where data is encrypted but
    remains selectively shareable; it handles redundancy automatically.
    It has a =backup= sub-command.

  - [[http://www.kitten-technologies.co.uk/project.php?project=ugarit][Ugarit]], a nice content-addressable backup & archival system written
    in Chicken Scheme.  The main differences compared to =chop-backup=
    are that it does not use content-hash keys for encryption (a
    symmetric encryption key must be kept in a =ugarit.conf= file), and
    lacks adaptive compression and content-based chopping (it doesn't
    implement [[./manual/libchop.html#Overview][the storage pipeline found in libchop]].)

#+BEGIN_CENTER
[[http://www.gnu.org/graphics/gplv3-127x51.png]]
#+END_CENTER
